{"version":3,"sources":["/Users/shaale/Desktop/shaale-projects/shaale/node_modules/ngx-infinite-scroll/modules/ngx-infinite-scroll.js"],"names":[],"mappings":"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","sourcesContent":["import { Directive, ElementRef, EventEmitter, Input, NgModule, NgZone, Output } from '@angular/core';\nimport { fromEvent, of } from 'rxjs';\nimport { filter, map, mergeMap, sampleTime, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} selector\n * @param {?} scrollWindow\n * @param {?} defaultElement\n * @param {?} fromRoot\n * @return {?}\n */\nfunction resolveContainerElement(selector, scrollWindow, defaultElement, fromRoot) {\n    /** @type {?} */\n    const hasWindow = window && !!window.document && window.document.documentElement;\n    /** @type {?} */\n    let container = hasWindow && scrollWindow ? window : defaultElement;\n    if (selector) {\n        /** @type {?} */\n        const containerIsString = selector && hasWindow && typeof selector === 'string';\n        container = containerIsString\n            ? findElement(selector, defaultElement.nativeElement, fromRoot)\n            : selector;\n        if (!container) {\n            throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\n        }\n    }\n    return container;\n}\n/**\n * @param {?} selector\n * @param {?} customRoot\n * @param {?} fromRoot\n * @return {?}\n */\nfunction findElement(selector, customRoot, fromRoot) {\n    /** @type {?} */\n    const rootEl = fromRoot ? window.document : customRoot;\n    return rootEl.querySelector(selector);\n}\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction inputPropChanged(prop) {\n    return prop && !prop.firstChange;\n}\n/**\n * @return {?}\n */\nfunction hasWindowDefined() {\n    return typeof window !== 'undefined';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst VerticalProps = {\n    clientHeight: \"clientHeight\",\n    offsetHeight: \"offsetHeight\",\n    scrollHeight: \"scrollHeight\",\n    pageYOffset: \"pageYOffset\",\n    offsetTop: \"offsetTop\",\n    scrollTop: \"scrollTop\",\n    top: \"top\"\n};\n/** @type {?} */\nconst HorizontalProps = {\n    clientHeight: \"clientWidth\",\n    offsetHeight: \"offsetWidth\",\n    scrollHeight: \"scrollWidth\",\n    pageYOffset: \"pageXOffset\",\n    offsetTop: \"offsetLeft\",\n    scrollTop: \"scrollLeft\",\n    top: \"left\"\n};\nclass AxisResolver {\n    /**\n     * @param {?=} vertical\n     */\n    constructor(vertical = true) {\n        this.vertical = vertical;\n        this.propsMap = vertical ? VerticalProps : HorizontalProps;\n    }\n    /**\n     * @return {?}\n     */\n    clientHeightKey() {\n        return this.propsMap.clientHeight;\n    }\n    /**\n     * @return {?}\n     */\n    offsetHeightKey() {\n        return this.propsMap.offsetHeight;\n    }\n    /**\n     * @return {?}\n     */\n    scrollHeightKey() {\n        return this.propsMap.scrollHeight;\n    }\n    /**\n     * @return {?}\n     */\n    pageYOffsetKey() {\n        return this.propsMap.pageYOffset;\n    }\n    /**\n     * @return {?}\n     */\n    offsetTopKey() {\n        return this.propsMap.offsetTop;\n    }\n    /**\n     * @return {?}\n     */\n    scrollTopKey() {\n        return this.propsMap.scrollTop;\n    }\n    /**\n     * @return {?}\n     */\n    topKey() {\n        return this.propsMap.top;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} alwaysCallback\n * @param {?} shouldFireScrollEvent\n * @param {?} isTriggeredCurrentTotal\n * @return {?}\n */\nfunction shouldTriggerEvents(alwaysCallback, shouldFireScrollEvent, isTriggeredCurrentTotal) {\n    if (alwaysCallback && shouldFireScrollEvent) {\n        return true;\n    }\n    if (!isTriggeredCurrentTotal && shouldFireScrollEvent) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction createResolver({ windowElement, axis }) {\n    return createResolverWithContainer({ axis, isWindow: isElementWindow(windowElement) }, windowElement);\n}\n/**\n * @param {?} resolver\n * @param {?} windowElement\n * @return {?}\n */\nfunction createResolverWithContainer(resolver, windowElement) {\n    /** @type {?} */\n    const container = resolver.isWindow || (windowElement && !windowElement.nativeElement)\n        ? windowElement\n        : windowElement.nativeElement;\n    return Object.assign({}, resolver, { container });\n}\n/**\n * @param {?} windowElement\n * @return {?}\n */\nfunction isElementWindow(windowElement) {\n    /** @type {?} */\n    const isWindow = ['Window', 'global'].some((obj) => Object.prototype.toString.call(windowElement).includes(obj));\n    return isWindow;\n}\n/**\n * @param {?} isContainerWindow\n * @param {?} windowElement\n * @return {?}\n */\nfunction getDocumentElement(isContainerWindow, windowElement) {\n    return isContainerWindow ? windowElement.document.documentElement : null;\n}\n/**\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePoints(element, resolver) {\n    /** @type {?} */\n    const height = extractHeightForElement(resolver);\n    return resolver.isWindow\n        ? calculatePointsForWindow(height, element, resolver)\n        : calculatePointsForElement(height, element, resolver);\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePointsForWindow(height, element, resolver) {\n    const { axis, container, isWindow } = resolver;\n    const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n    // scrolled until now / current y point\n    /** @type {?} */\n    const scrolled = height +\n        getElementPageYOffset(getDocumentElement(isWindow, container), axis, isWindow);\n    // total height / most bottom y point\n    /** @type {?} */\n    const nativeElementHeight = getElementHeight(element.nativeElement, isWindow, offsetHeightKey, clientHeightKey);\n    /** @type {?} */\n    const totalToScroll = getElementOffsetTop(element.nativeElement, axis, isWindow) +\n        nativeElementHeight;\n    return { height, scrolled, totalToScroll, isWindow };\n}\n/**\n * @param {?} height\n * @param {?} element\n * @param {?} resolver\n * @return {?}\n */\nfunction calculatePointsForElement(height, element, resolver) {\n    const { axis, container } = resolver;\n    // perhaps use container.offsetTop instead of 'scrollTop'\n    /** @type {?} */\n    const scrolled = container[axis.scrollTopKey()];\n    /** @type {?} */\n    const totalToScroll = container[axis.scrollHeightKey()];\n    return { height, scrolled, totalToScroll, isWindow: false };\n}\n/**\n * @param {?} axis\n * @return {?}\n */\nfunction extractHeightPropKeys(axis) {\n    return {\n        offsetHeightKey: axis.offsetHeightKey(),\n        clientHeightKey: axis.clientHeightKey()\n    };\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction extractHeightForElement({ container, isWindow, axis }) {\n    const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\n    return getElementHeight(container, isWindow, offsetHeightKey, clientHeightKey);\n}\n/**\n * @param {?} elem\n * @param {?} isWindow\n * @param {?} offsetHeightKey\n * @param {?} clientHeightKey\n * @return {?}\n */\nfunction getElementHeight(elem, isWindow, offsetHeightKey, clientHeightKey) {\n    if (isNaN(elem[offsetHeightKey])) {\n        /** @type {?} */\n        const docElem = getDocumentElement(isWindow, elem);\n        return docElem ? docElem[clientHeightKey] : 0;\n    }\n    else {\n        return elem[offsetHeightKey];\n    }\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nfunction getElementOffsetTop(elem, axis, isWindow) {\n    /** @type {?} */\n    const topKey = axis.topKey();\n    // elem = elem.nativeElement;\n    if (!elem.getBoundingClientRect) {\n        // || elem.css('none')) {\n        return;\n    }\n    return (elem.getBoundingClientRect()[topKey] +\n        getElementPageYOffset(elem, axis, isWindow));\n}\n/**\n * @param {?} elem\n * @param {?} axis\n * @param {?} isWindow\n * @return {?}\n */\nfunction getElementPageYOffset(elem, axis, isWindow) {\n    /** @type {?} */\n    const pageYOffset = axis.pageYOffsetKey();\n    /** @type {?} */\n    const scrollTop = axis.scrollTopKey();\n    /** @type {?} */\n    const offsetTop = axis.offsetTopKey();\n    if (isNaN(window[pageYOffset])) {\n        return getDocumentElement(isWindow, elem)[scrollTop];\n    }\n    else if (elem.ownerDocument) {\n        return elem.ownerDocument.defaultView[pageYOffset];\n    }\n    else {\n        return elem[offsetTop];\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} container\n * @param {?} distance\n * @param {?} scrollingDown\n * @return {?}\n */\nfunction shouldFireScrollEvent(container, distance, scrollingDown) {\n    /** @type {?} */\n    let remaining;\n    /** @type {?} */\n    let containerBreakpoint;\n    if (container.totalToScroll <= 0) {\n        return false;\n    }\n    /** @type {?} */\n    const scrolledUntilNow = container.isWindow ? container.scrolled : container.height + container.scrolled;\n    if (scrollingDown) {\n        remaining =\n            (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\n        containerBreakpoint = distance.down / 10;\n    }\n    else {\n        /** @type {?} */\n        const totalHiddenContentHeight = container.scrolled + (container.totalToScroll - scrolledUntilNow);\n        remaining = container.scrolled / totalHiddenContentHeight;\n        containerBreakpoint = distance.up / 10;\n    }\n    /** @type {?} */\n    const shouldFireEvent = remaining <= containerBreakpoint;\n    return shouldFireEvent;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @return {?}\n */\nfunction isScrollingDownwards(lastScrollPosition, container) {\n    return lastScrollPosition < container.scrolled;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} container\n * @param {?} distance\n * @return {?}\n */\nfunction getScrollStats(lastScrollPosition, container, distance) {\n    /** @type {?} */\n    const scrollDown = isScrollingDownwards(lastScrollPosition, container);\n    return {\n        fire: shouldFireScrollEvent(container, distance, scrollDown),\n        scrollDown\n    };\n}\n/**\n * @param {?} position\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} totalToScroll\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} scrollState\n * @return {?}\n */\n\n/**\n * @param {?} scroll\n * @param {?} scrollState\n * @param {?} triggered\n * @param {?} isScrollingDown\n * @return {?}\n */\n\n/**\n * @param {?} totalToScroll\n * @param {?} scrollState\n * @param {?} isScrollingDown\n * @return {?}\n */\n\n/**\n * @param {?} scrollState\n * @param {?} scrolledUntilNow\n * @param {?} totalToScroll\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollState {\n    /**\n     * @param {?} __0\n     */\n    constructor({ totalToScroll }) {\n        this.lastScrollPosition = 0;\n        this.lastTotalToScroll = 0;\n        this.totalToScroll = 0;\n        this.triggered = {\n            down: 0,\n            up: 0\n        };\n        this.totalToScroll = totalToScroll;\n    }\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    updateScrollPosition(position) {\n        return (this.lastScrollPosition = position);\n    }\n    /**\n     * @param {?} totalToScroll\n     * @return {?}\n     */\n    updateTotalToScroll(totalToScroll) {\n        if (this.lastTotalToScroll !== totalToScroll) {\n            this.lastTotalToScroll = this.totalToScroll;\n            this.totalToScroll = totalToScroll;\n        }\n    }\n    /**\n     * @param {?} scrolledUntilNow\n     * @param {?} totalToScroll\n     * @return {?}\n     */\n    updateScroll(scrolledUntilNow, totalToScroll) {\n        this.updateScrollPosition(scrolledUntilNow);\n        this.updateTotalToScroll(totalToScroll);\n    }\n    /**\n     * @param {?} scroll\n     * @param {?} isScrollingDown\n     * @return {?}\n     */\n    updateTriggeredFlag(scroll, isScrollingDown) {\n        if (isScrollingDown) {\n            this.triggered.down = scroll;\n        }\n        else {\n            this.triggered.up = scroll;\n        }\n    }\n    /**\n     * @param {?} totalToScroll\n     * @param {?} isScrollingDown\n     * @return {?}\n     */\n    isTriggeredScroll(totalToScroll, isScrollingDown) {\n        return isScrollingDown\n            ? this.triggered.down === totalToScroll\n            : this.triggered.up === totalToScroll;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction createScroller(config) {\n    const { scrollContainer, scrollWindow, element, fromRoot } = config;\n    /** @type {?} */\n    const resolver = createResolver({\n        axis: new AxisResolver(!config.horizontal),\n        windowElement: resolveContainerElement(scrollContainer, scrollWindow, element, fromRoot)\n    });\n    /** @type {?} */\n    const scrollState = new ScrollState({\n        totalToScroll: calculatePoints(element, resolver)\n    });\n    /** @type {?} */\n    const options = {\n        container: resolver.container,\n        throttle: config.throttle\n    };\n    /** @type {?} */\n    const distance = {\n        up: config.upDistance,\n        down: config.downDistance\n    };\n    return attachScrollEvent(options).pipe(mergeMap(() => of(calculatePoints(element, resolver))), map((positionStats) => toInfiniteScrollParams(scrollState.lastScrollPosition, positionStats, distance)), tap(({ stats }) => scrollState.updateScroll(stats.scrolled, stats.totalToScroll)), filter(({ fire, scrollDown, stats: { totalToScroll } }) => shouldTriggerEvents(config.alwaysCallback, fire, scrollState.isTriggeredScroll(totalToScroll, scrollDown))), tap(({ scrollDown, stats: { totalToScroll } }) => {\n        scrollState.updateTriggeredFlag(totalToScroll, scrollDown);\n    }), map(toInfiniteScrollAction));\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction attachScrollEvent(options) {\n    /** @type {?} */\n    let obs = fromEvent(options.container, 'scroll');\n    // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\n    // Let's avoid calling the function unless needed.\n    // See https://github.com/orizens/ngx-infinite-scroll/issues/198\n    if (options.throttle) {\n        obs = obs.pipe(sampleTime(options.throttle));\n    }\n    return obs;\n}\n/**\n * @param {?} lastScrollPosition\n * @param {?} stats\n * @param {?} distance\n * @return {?}\n */\nfunction toInfiniteScrollParams(lastScrollPosition, stats, distance) {\n    const { scrollDown, fire } = getScrollStats(lastScrollPosition, stats, distance);\n    return {\n        scrollDown,\n        fire,\n        stats\n    };\n}\n/** @type {?} */\nconst InfiniteScrollActions = {\n    DOWN: '[NGX_ISE] DOWN',\n    UP: '[NGX_ISE] UP'\n};\n/**\n * @param {?} response\n * @return {?}\n */\nfunction toInfiniteScrollAction(response) {\n    const { scrollDown, stats: { scrolled: currentScrollPosition } } = response;\n    return {\n        type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\n        payload: {\n            currentScrollPosition\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass InfiniteScrollDirective {\n    /**\n     * @param {?} element\n     * @param {?} zone\n     */\n    constructor(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.scrolled = new EventEmitter();\n        this.scrolledUp = new EventEmitter();\n        this.infiniteScrollDistance = 2;\n        this.infiniteScrollUpDistance = 1.5;\n        this.infiniteScrollThrottle = 150;\n        this.infiniteScrollDisabled = false;\n        this.infiniteScrollContainer = null;\n        this.scrollWindow = true;\n        this.immediateCheck = false;\n        this.horizontal = false;\n        this.alwaysCallback = false;\n        this.fromRoot = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this.infiniteScrollDisabled) {\n            this.setup();\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    ngOnChanges({ infiniteScrollContainer, infiniteScrollDisabled, infiniteScrollDistance }) {\n        /** @type {?} */\n        const containerChanged = inputPropChanged(infiniteScrollContainer);\n        /** @type {?} */\n        const disabledChanged = inputPropChanged(infiniteScrollDisabled);\n        /** @type {?} */\n        const distanceChanged = inputPropChanged(infiniteScrollDistance);\n        /** @type {?} */\n        const shouldSetup = (!disabledChanged && !this.infiniteScrollDisabled) ||\n            (disabledChanged && !infiniteScrollDisabled.currentValue) || distanceChanged;\n        if (containerChanged || disabledChanged || distanceChanged) {\n            this.destroyScroller();\n            if (shouldSetup) {\n                this.setup();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setup() {\n        if (hasWindowDefined()) {\n            this.zone.runOutsideAngular(() => {\n                this.disposeScroller = createScroller({\n                    fromRoot: this.fromRoot,\n                    alwaysCallback: this.alwaysCallback,\n                    disable: this.infiniteScrollDisabled,\n                    downDistance: this.infiniteScrollDistance,\n                    element: this.element,\n                    horizontal: this.horizontal,\n                    scrollContainer: this.infiniteScrollContainer,\n                    scrollWindow: this.scrollWindow,\n                    throttle: this.infiniteScrollThrottle,\n                    upDistance: this.infiniteScrollUpDistance\n                }).subscribe((payload) => this.zone.run(() => this.handleOnScroll(payload)));\n            });\n        }\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    handleOnScroll({ type, payload }) {\n        switch (type) {\n            case InfiniteScrollActions.DOWN:\n                return this.scrolled.emit(payload);\n            case InfiniteScrollActions.UP:\n                return this.scrolledUp.emit(payload);\n            default:\n                return;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyScroller();\n    }\n    /**\n     * @return {?}\n     */\n    destroyScroller() {\n        if (this.disposeScroller) {\n            this.disposeScroller.unsubscribe();\n        }\n    }\n}\nInfiniteScrollDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]'\n            },] },\n];\n/** @nocollapse */\nInfiniteScrollDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nInfiniteScrollDirective.propDecorators = {\n    scrolled: [{ type: Output }],\n    scrolledUp: [{ type: Output }],\n    infiniteScrollDistance: [{ type: Input }],\n    infiniteScrollUpDistance: [{ type: Input }],\n    infiniteScrollThrottle: [{ type: Input }],\n    infiniteScrollDisabled: [{ type: Input }],\n    infiniteScrollContainer: [{ type: Input }],\n    scrollWindow: [{ type: Input }],\n    immediateCheck: [{ type: Input }],\n    horizontal: [{ type: Input }],\n    alwaysCallback: [{ type: Input }],\n    fromRoot: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass InfiniteScrollModule {\n}\nInfiniteScrollModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [InfiniteScrollDirective],\n                exports: [InfiniteScrollDirective],\n                imports: [],\n                providers: []\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Angular library starter.\n * Build an Angular library compatible with AoT compilation & Tree shaking.\n * Written by Roberto Simonetti.\n * MIT license.\n * https://github.com/robisim74/angular-library-starter\n */\n/**\n * Entry point for all public APIs of the package.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InfiniteScrollDirective, InfiniteScrollModule };\n//# sourceMappingURL=ngx-infinite-scroll.js.map\n"],"sourceRoot":"webpack:///"}