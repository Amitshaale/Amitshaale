{"version":3,"sources":["/Users/shaale/Desktop/shaale-projects/shaale/node_modules/@nicky-lenaers/ngx-scroll-to/fesm2015/nicky-lenaers-ngx-scroll-to.js"],"names":[],"mappings":"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","sourcesContent":["import { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { ReplaySubject, throwError } from 'rxjs';\nimport { ElementRef, Injectable, PLATFORM_ID, Inject, Directive, Input, Renderer2, NgModule } from '@angular/core';\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Default values for Component Input\r\n * @type {?}\r\n */\r\nconst DEFAULTS = {\r\n    target: null,\r\n    action: 'click',\r\n    duration: 650,\r\n    easing: 'easeInOutQuad',\r\n    offset: 0,\r\n    offsetMap: new Map()\r\n};\r\nconst ɵ0 = /**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    return time * time;\r\n}, ɵ1 = /**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    return time * (2 - time);\r\n}, ɵ2 = /**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    return time < 0.5 ? 2 * time * time : -1 + (4 - 2 * time) * time;\r\n}, ɵ3 = /**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    return time * time * time;\r\n}, ɵ4 = /**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    return (--time) * time * time + 1;\r\n}, ɵ5 = /**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    return time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1;\r\n}, ɵ6 = /**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    return time * time * time * time;\r\n}, ɵ7 = /**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    return 1 - (--time) * time * time * time;\r\n}, ɵ8 = /**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    return time < 0.5 ? 8 * time * time * time * time : 1 - 8 * (--time) * time * time * time;\r\n}, ɵ9 = /**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    return time * time * time * time * time;\r\n}, ɵ10 = /**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    return 1 + (--time) * time * time * time * time;\r\n}, ɵ11 = /**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    return time < 0.5 ? 16 * time * time * time * time * time : 1 + 16 * (--time) * time * time * time * time;\r\n}, ɵ12 = /**\r\n * @param {?} time\r\n * @return {?}\r\n */\r\n(time) => {\r\n    return Math.pow(2, -10 * time) * Math.sin((time - 1 / 4) * (2 * Math.PI) / 1) + 1;\r\n};\r\n/**\r\n * Easing Colleciton\r\n * @type {?}\r\n */\r\nconst EASING = {\r\n    easeInQuad: (ɵ0),\r\n    easeOutQuad: (ɵ1),\r\n    easeInOutQuad: (ɵ2),\r\n    easeInCubic: (ɵ3),\r\n    easeOutCubic: (ɵ4),\r\n    easeInOutCubic: (ɵ5),\r\n    easeInQuart: (ɵ6),\r\n    easeOutQuart: (ɵ7),\r\n    easeInOutQuart: (ɵ8),\r\n    easeInQuint: (ɵ9),\r\n    easeOutQuint: (ɵ10),\r\n    easeInOutQuint: (ɵ11),\r\n    easeOutElastic: (ɵ12)\r\n};\r\n/**\r\n * Set of allowed events as triggers\r\n * for the Animation to start.\r\n * @type {?}\r\n */\r\nconst EVENTS = [\r\n    'click',\r\n    'mouseenter',\r\n    'mouseover',\r\n    'mousedown',\r\n    'mouseup',\r\n    'dblclick',\r\n    'contextmenu',\r\n    'wheel',\r\n    'mouseleave',\r\n    'mouseout'\r\n];\r\n/**\r\n * Strip hash (#) from value.\r\n *\r\n * @param {?} value \t\t\t\tThe given string value\r\n * @return {?} \t\t\t\t\tThe stripped string value\r\n */\r\nfunction stripHash(value) {\r\n    return value.substring(0, 1) === '#' ? value.substring(1) : value;\r\n}\r\n/**\r\n * Test if a given value is a string.\r\n *\r\n * @param {?} value \t\t\t\t\tThe given value\r\n * @return {?} \t\t\t\t\t\tWhether the given value is a string\r\n */\r\nfunction isString(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\n/**\r\n * Test if a given Element is the Window.\r\n *\r\n * @param {?} container \t\t\t\tThe given Element\r\n * @return {?} \t\t\t\t\t\tWhether the given Element is Window\r\n */\r\nfunction isWindow(container) {\r\n    return container === window;\r\n}\r\n/**\r\n * Test if a given value is of type ElementRef.\r\n *\r\n * @param {?} value \t\t\t\t\tThe given value\r\n * @return {?} Whether the given value is a number\r\n */\r\nfunction isElementRef(value) {\r\n    return value instanceof ElementRef;\r\n}\r\n/**\r\n * Whether or not the given value is a Native Element.\r\n *\r\n * @param {?} value           The given value\r\n * @return {?} Whether or not the value is a Native Element\r\n */\r\nfunction isNativeElement(value) {\r\n    return value instanceof HTMLElement;\r\n}\r\n/**\r\n * Test if a given value is type number.\r\n *\r\n * @param {?} value \t\t\t\t\tThe given value\r\n * @return {?} \t\t\t\t\t\tWhether the given value is a number\r\n */\r\nfunction isNumber(value) {\r\n    return !isNaN(parseFloat(value)) && isFinite(value);\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Scroll To Animation\r\n */\r\nclass ScrollToAnimation {\r\n    /**\r\n     * Class Constructor.\r\n     *\r\n     * @param {?} _container            The Container\r\n     * @param {?} _listenerTarget       The Element that listens for DOM Events\r\n     * @param {?} _isWindow             Whether or not the listener is the Window\r\n     * @param {?} _to                   Position to scroll to\r\n     * @param {?} _options              Additional options for scrolling\r\n     * @param {?} _isBrowser            Whether or not execution runs in the browser\r\n     *                              (as opposed to the server)\r\n     */\r\n    constructor(_container, _listenerTarget, _isWindow, _to, _options, _isBrowser) {\r\n        this._container = _container;\r\n        this._listenerTarget = _listenerTarget;\r\n        this._isWindow = _isWindow;\r\n        this._to = _to;\r\n        this._options = _options;\r\n        this._isBrowser = _isBrowser;\r\n        /**\r\n         * Recursively loop over the Scroll Animation\r\n         */\r\n        this._loop = (/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this._timeLapsed += this._tick;\r\n            this._percentage = (this._timeLapsed / this._options.duration);\r\n            this._percentage = (this._percentage > 1) ? 1 : this._percentage;\r\n            // Position Update\r\n            this._position = this._startPosition +\r\n                ((this._startPosition - this._to <= 0 ? 1 : -1) *\r\n                    this._distance *\r\n                    EASING[this._options.easing](this._percentage));\r\n            if (this._lastPosition !== null && this._position === this._lastPosition) {\r\n                this.stop();\r\n            }\r\n            else {\r\n                this._source$.next(this._position);\r\n                this._isWindow\r\n                    ? this._listenerTarget.scrollTo(0, Math.floor(this._position))\r\n                    : this._container.scrollTop = Math.floor(this._position);\r\n                this._lastPosition = this._position;\r\n            }\r\n        });\r\n        this._tick = 16;\r\n        this._interval = null;\r\n        this._lastPosition = null;\r\n        this._timeLapsed = 0;\r\n        this._windowScrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\r\n        if (!this._container) {\r\n            this._startPosition = this._windowScrollTop;\r\n        }\r\n        else {\r\n            this._startPosition = this._isWindow ? this._windowScrollTop : this._container.scrollTop;\r\n        }\r\n        // Correction for Starting Position of nested HTML Elements\r\n        if (this._container && !this._isWindow) {\r\n            this._to = this._to - this._container.getBoundingClientRect().top + this._startPosition;\r\n        }\r\n        // Set Distance\r\n        /** @type {?} */\r\n        const directionalDistance = this._startPosition - this._to;\r\n        this._distance = this._container ? Math.abs(this._startPosition - this._to) : this._to;\r\n        this._mappedOffset = this._options.offset;\r\n        // Set offset from Offset Map\r\n        if (this._isBrowser) {\r\n            this._options\r\n                .offsetMap\r\n                .forEach((/**\r\n             * @param {?} value\r\n             * @param {?} key\r\n             * @return {?}\r\n             */\r\n            (value, key) => this._mappedOffset = window.innerWidth > key ? value : this._mappedOffset));\r\n        }\r\n        this._distance += this._mappedOffset * (directionalDistance <= 0 ? 1 : -1);\r\n        this._source$ = new ReplaySubject();\r\n    }\r\n    /**\r\n     * Start the new Scroll Animation.\r\n     *\r\n     * @return {?} Observable containing a number\r\n     */\r\n    start() {\r\n        clearInterval(this._interval);\r\n        this._interval = setInterval(this._loop, this._tick);\r\n        return this._source$.asObservable();\r\n    }\r\n    /**\r\n     * Stop the current Scroll Animation Loop.\r\n     *\r\n     * @return {?} Void\r\n     */\r\n    stop() {\r\n        clearInterval(this._interval);\r\n        this._interval = null;\r\n        this._source$.complete();\r\n    }\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * The Scroll To Service handles starting, interrupting\r\n * and ending the actual Scroll Animation. It provides\r\n * some utilities to find the proper HTML Element on a\r\n * given page to setup Event Listeners and calculate\r\n * distances for the Animation.\r\n */\r\nclass ScrollToService {\r\n    /**\r\n     * Construct and setup required paratemeters.\r\n     *\r\n     * @param {?} _document         A Reference to the Document\r\n     * @param {?} _platformId       Angular Platform ID\r\n     */\r\n    constructor(_document, _platformId) {\r\n        this._document = _document;\r\n        this._platformId = _platformId;\r\n        this._interruptiveEvents = ['mousewheel', 'DOMMouseScroll', 'touchstart'];\r\n    }\r\n    /**\r\n     * Target an Element to scroll to. Notice that the `TimeOut` decorator\r\n     * ensures the executing to take place in the next Angular lifecycle.\r\n     * This allows for scrolling to elements that are e.g. initially hidden\r\n     * by means of `*ngIf`, but ought to be scrolled to eventually.\r\n     *\r\n     * \\@todo type 'any' in Observable should become custom type like 'ScrollToEvent' (base class), see issue comment:\r\n     * \t- https://github.com/nicky-lenaers/ngx-scroll-to/issues/10#issuecomment-317198481\r\n     *\r\n     * @param {?} options         Configuration Object\r\n     * @return {?} Observable\r\n     */\r\n    scrollTo(options) {\r\n        if (!isPlatformBrowser(this._platformId))\r\n            return new ReplaySubject().asObservable();\r\n        return this._start(options);\r\n    }\r\n    /**\r\n     * Start a new Animation.\r\n     *\r\n     * \\@todo Emit proper events from subscription\r\n     *\r\n     * @private\r\n     * @param {?} options         Configuration Object\r\n     * @return {?} Observable\r\n     */\r\n    _start(options) {\r\n        // Merge config with default values\r\n        /** @type {?} */\r\n        const mergedConfigOptions = (/** @type {?} */ (Object.assign({}, (/** @type {?} */ (DEFAULTS)), options)));\r\n        if (this._animation)\r\n            this._animation.stop();\r\n        /** @type {?} */\r\n        const targetNode = this._getNode(mergedConfigOptions.target);\r\n        if (mergedConfigOptions.target && !targetNode)\r\n            return throwError('Unable to find Target Element');\r\n        /** @type {?} */\r\n        const container = this._getContainer(mergedConfigOptions, targetNode);\r\n        if (mergedConfigOptions.container && !container)\r\n            return throwError('Unable to find Container Element');\r\n        /** @type {?} */\r\n        const listenerTarget = this._getListenerTarget(container) || window;\r\n        /** @type {?} */\r\n        let to = container ? container.getBoundingClientRect().top : 0;\r\n        if (targetNode) {\r\n            to = isWindow(listenerTarget) ? targetNode.offsetTop : targetNode.getBoundingClientRect().top;\r\n        }\r\n        // Create Animation\r\n        this._animation = new ScrollToAnimation(container, listenerTarget, isWindow(listenerTarget), to, mergedConfigOptions, isPlatformBrowser(this._platformId));\r\n        /** @type {?} */\r\n        const onInterrupt = (/**\r\n         * @return {?}\r\n         */\r\n        () => this._animation.stop());\r\n        this._addInterruptiveEventListeners(listenerTarget, onInterrupt);\r\n        // Start Animation\r\n        /** @type {?} */\r\n        const animation$ = this._animation.start();\r\n        this._subscribeToAnimation(animation$, listenerTarget, onInterrupt);\r\n        return animation$;\r\n    }\r\n    /**\r\n     * Subscribe to the events emitted from the Scrolling\r\n     * Animation. Events might be used for e.g. unsubscribing\r\n     * once finished.\r\n     *\r\n     * @private\r\n     * @param {?} animation$              The Animation Observable\r\n     * @param {?} listenerTarget          The Listener Target for events\r\n     * @param {?} onInterrupt             The handler for Interruptive Events\r\n     * @return {?} Void\r\n     */\r\n    _subscribeToAnimation(animation$, listenerTarget, onInterrupt) {\r\n        /** @type {?} */\r\n        const subscription = animation$\r\n            .subscribe((/**\r\n         * @return {?}\r\n         */\r\n        () => { }), (/**\r\n         * @return {?}\r\n         */\r\n        () => { }), (/**\r\n         * @return {?}\r\n         */\r\n        () => {\r\n            this._removeInterruptiveEventListeners(this._interruptiveEvents, listenerTarget, onInterrupt);\r\n            subscription.unsubscribe();\r\n        }));\r\n    }\r\n    /**\r\n     * Get the container HTML Element in which\r\n     * the scrolling should happen.\r\n     *\r\n     * @private\r\n     * @param {?} options         The Merged Configuration Object\r\n     * @param {?} targetNode    the targeted HTMLElement\r\n     * @return {?}\r\n     */\r\n    _getContainer(options, targetNode) {\r\n        /** @type {?} */\r\n        let container = null;\r\n        if (options.container) {\r\n            container = this._getNode(options.container, true);\r\n        }\r\n        else if (targetNode) {\r\n            container = this._getFirstScrollableParent(targetNode);\r\n        }\r\n        return container;\r\n    }\r\n    /**\r\n     * Add listeners for the Animation Interruptive Events\r\n     * to the Listener Target.\r\n     *\r\n     * @private\r\n     * @param {?} listenerTarget    Target to attach the listener on\r\n     * @param {?} handler           Handler for when the listener fires\r\n     * @return {?} Void\r\n     */\r\n    _addInterruptiveEventListeners(listenerTarget, handler) {\r\n        if (!listenerTarget)\r\n            listenerTarget = window;\r\n        this._interruptiveEvents\r\n            .forEach((/**\r\n         * @param {?} event\r\n         * @return {?}\r\n         */\r\n        event => listenerTarget\r\n            .addEventListener(event, handler, this._supportPassive() ? { passive: true } : false)));\r\n    }\r\n    /**\r\n     * Feature-detect support for passive event listeners.\r\n     *\r\n     * @private\r\n     * @return {?} Whether or not passive event listeners are supported\r\n     */\r\n    _supportPassive() {\r\n        /** @type {?} */\r\n        let supportsPassive = false;\r\n        try {\r\n            /** @type {?} */\r\n            const opts = Object.defineProperty({}, 'passive', {\r\n                get: (/**\r\n                 * @return {?}\r\n                 */\r\n                function () {\r\n                    supportsPassive = true;\r\n                })\r\n            });\r\n            window.addEventListener('testPassive', null, opts);\r\n            window.removeEventListener('testPassive', null, opts);\r\n        }\r\n        catch (e) { }\r\n        return supportsPassive;\r\n    }\r\n    /**\r\n     * Remove listeners for the Animation Interrupt Event from\r\n     * the Listener Target. Specifying the correct handler prevents\r\n     * memory leaks and makes the allocated memory available for\r\n     * Garbage Collection.\r\n     *\r\n     * @private\r\n     * @param {?} events            List of Interruptive Events to remove\r\n     * @param {?} listenerTarget    Target to attach the listener on\r\n     * @param {?} handler           Handler for when the listener fires\r\n     * @return {?} Void\r\n     */\r\n    _removeInterruptiveEventListeners(events, listenerTarget, handler) {\r\n        if (!listenerTarget)\r\n            listenerTarget = window;\r\n        events.forEach((/**\r\n         * @param {?} event\r\n         * @return {?}\r\n         */\r\n        event => listenerTarget.removeEventListener(event, handler)));\r\n    }\r\n    /**\r\n     * Find the first scrollable parent Node of a given\r\n     * Element. The DOM Tree gets searched upwards\r\n     * to find this first scrollable parent. Parents might\r\n     * be ignored by CSS styles applied to the HTML Element.\r\n     *\r\n     * @private\r\n     * @param {?} nativeElement     The Element to search the DOM Tree upwards from\r\n     * @return {?} The first scrollable parent HTML Element\r\n     */\r\n    _getFirstScrollableParent(nativeElement) {\r\n        /** @type {?} */\r\n        let style = window.getComputedStyle(nativeElement);\r\n        /** @type {?} */\r\n        const overflowRegex = /(auto|scroll|overlay)/;\r\n        if (style.position === 'fixed')\r\n            return null;\r\n        for (let parent = nativeElement; parent = parent.parentElement; null) {\r\n            style = window.getComputedStyle(parent);\r\n            if (style.position === 'absolute'\r\n                || style.overflow === 'hidden'\r\n                || style.overflowY === 'hidden')\r\n                continue;\r\n            if (overflowRegex.test(style.overflow + style.overflowY)\r\n                || parent.tagName === 'BODY')\r\n                return parent;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Get the Target Node to scroll to.\r\n     *\r\n     * @private\r\n     * @param {?} id              The given ID of the node, either a string or\r\n     *                        an element reference\r\n     * @param {?=} allowBodyTag    Indicate whether or not the Document Body is\r\n     *                        considered a valid Target Node\r\n     * @return {?} The Target Node to scroll to\r\n     */\r\n    _getNode(id, allowBodyTag = false) {\r\n        /** @type {?} */\r\n        let targetNode;\r\n        if (isString(id)) {\r\n            if (allowBodyTag && (id === 'body' || id === 'BODY')) {\r\n                targetNode = this._document.body;\r\n            }\r\n            else {\r\n                targetNode = this._document.getElementById(stripHash(id));\r\n            }\r\n        }\r\n        else if (isNumber(id)) {\r\n            targetNode = this._document.getElementById(String(id));\r\n        }\r\n        else if (isElementRef(id)) {\r\n            targetNode = id.nativeElement;\r\n        }\r\n        else if (isNativeElement(id)) {\r\n            targetNode = id;\r\n        }\r\n        return targetNode;\r\n    }\r\n    /**\r\n     * Retrieve the Listener target. This Listener Target is used\r\n     * to attach Event Listeners on. In case of the target being\r\n     * the Document Body, we need the actual `window` to listen\r\n     * for events.\r\n     *\r\n     * @private\r\n     * @param {?} container           The HTML Container element\r\n     * @return {?} The Listener Target to attach events on\r\n     */\r\n    _getListenerTarget(container) {\r\n        if (!container)\r\n            return null;\r\n        return this._isDocumentBody(container) ? window : container;\r\n    }\r\n    /**\r\n     * Test if a given HTML Element is the Document Body.\r\n     *\r\n     * @private\r\n     * @param {?} element             The given HTML Element\r\n     * @return {?} Whether or not the Element is the\r\n     *                            Document Body Element\r\n     */\r\n    _isDocumentBody(element) {\r\n        return element.tagName.toUpperCase() === 'BODY';\r\n    }\r\n}\r\nScrollToService.decorators = [\r\n    { type: Injectable }\r\n];\r\n/** @nocollapse */\r\nScrollToService.ctorParameters = () => [\r\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\r\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/* tslint:disable */\r\nclass ScrollToDirective {\r\n    /**\r\n     * @param {?} _elementRef\r\n     * @param {?} _scrollToService\r\n     * @param {?} _renderer2\r\n     */\r\n    constructor(_elementRef, _scrollToService, _renderer2) {\r\n        this._elementRef = _elementRef;\r\n        this._scrollToService = _scrollToService;\r\n        this._renderer2 = _renderer2;\r\n        this.ngxScrollTo = DEFAULTS.target;\r\n        this.ngxScrollToEvent = DEFAULTS.action;\r\n        this.ngxScrollToDuration = DEFAULTS.duration;\r\n        this.ngxScrollToEasing = DEFAULTS.easing;\r\n        this.ngxScrollToOffset = DEFAULTS.offset;\r\n        this.ngxScrollToOffsetMap = DEFAULTS.offsetMap;\r\n    }\r\n    /**\r\n     * Angular Lifecycle Hook - After View Init\r\n     *\r\n     * \\@todo Implement Subscription for Events\r\n     *\r\n     * @return {?} void\r\n     */\r\n    ngAfterViewInit() {\r\n        // Test Event Support\r\n        if (EVENTS.indexOf(this.ngxScrollToEvent) === -1)\r\n            throw new Error(`Unsupported Event '${this.ngxScrollToEvent}'`);\r\n        // Listen for the trigger...\r\n        this._renderer2.listen(this._elementRef.nativeElement, this.ngxScrollToEvent, (/**\r\n         * @param {?} event\r\n         * @return {?}\r\n         */\r\n        (event) => {\r\n            this._options = {\r\n                target: this.ngxScrollTo,\r\n                duration: this.ngxScrollToDuration,\r\n                easing: this.ngxScrollToEasing,\r\n                offset: this.ngxScrollToOffset,\r\n                offsetMap: this.ngxScrollToOffsetMap\r\n            };\r\n            this._scrollToService.scrollTo(this._options);\r\n        }));\r\n    }\r\n}\r\nScrollToDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                selector: '[ngx-scroll-to]'\r\n            },] }\r\n];\r\n/** @nocollapse */\r\nScrollToDirective.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ScrollToService },\r\n    { type: Renderer2 }\r\n];\r\nScrollToDirective.propDecorators = {\r\n    ngxScrollTo: [{ type: Input, args: ['ngx-scroll-to',] }],\r\n    ngxScrollToEvent: [{ type: Input, args: ['ngx-scroll-to-event',] }],\r\n    ngxScrollToDuration: [{ type: Input, args: ['ngx-scroll-to-duration',] }],\r\n    ngxScrollToEasing: [{ type: Input, args: ['ngx-scroll-to-easing',] }],\r\n    ngxScrollToOffset: [{ type: Input, args: ['ngx-scroll-to-offset',] }],\r\n    ngxScrollToOffsetMap: [{ type: Input, args: ['ngx-scroll-to-offset-map',] }]\r\n};\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Scroll To Module\r\n */\r\nclass ScrollToModule {\r\n    /**\r\n     * Guaranteed singletons for provided Services across App.\r\n     *\r\n     * @return {?} An Angular Module with Providers\r\n     */\r\n    static forRoot() {\r\n        return {\r\n            ngModule: ScrollToModule,\r\n            providers: [\r\n                ScrollToService\r\n            ]\r\n        };\r\n    }\r\n}\r\nScrollToModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                declarations: [\r\n                    ScrollToDirective\r\n                ],\r\n                exports: [\r\n                    ScrollToDirective\r\n                ]\r\n            },] }\r\n];\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nexport { ScrollToDirective, ScrollToModule, ScrollToService };\n\n//# sourceMappingURL=nicky-lenaers-ngx-scroll-to.js.map"],"sourceRoot":"webpack:///"}