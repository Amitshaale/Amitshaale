{"version":3,"sources":["/Users/shaale/Desktop/shaale-projects/shaale/node_modules/ngx-slick-carousel/fesm2015/ngx-slick-carousel.js"],"names":[],"mappings":"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","sourcesContent":["import { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { EventEmitter, Component, forwardRef, ElementRef, NgZone, Input, Output, Directive, Inject, PLATFORM_ID, Host, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Slick component\n */\nclass SlickCarouselComponent {\n    /**\n     * Constructor\n     * @param {?} el\n     * @param {?} zone\n     */\n    constructor(el, zone) {\n        this.el = el;\n        this.zone = zone;\n        this.afterChange = new EventEmitter();\n        this.beforeChange = new EventEmitter();\n        this.breakpoint = new EventEmitter();\n        this.destroy = new EventEmitter();\n        this.init = new EventEmitter();\n        this.slides = [];\n        this.initialized = false;\n        this._removedSlides = [];\n        this._addedSlides = [];\n    }\n    /**\n     * On component destroy\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.unslick();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.ngAfterViewChecked();\n    }\n    /**\n     * On component view checked\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n            /** @type {?} */\n            const nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n            if (!this.initialized) {\n                if (nextSlidesLength > 0) {\n                    this.initSlick();\n                }\n                // if nextSlidesLength is zere, do nothing\n            }\n            else if (nextSlidesLength === 0) { // unslick case\n                this.unslick();\n            }\n            else {\n                this._addedSlides.forEach((/**\n                 * @param {?} slickItem\n                 * @return {?}\n                 */\n                slickItem => {\n                    this.slides.push(slickItem);\n                    this.zone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n                    }));\n                }));\n                this._addedSlides = [];\n                this._removedSlides.forEach((/**\n                 * @param {?} slickItem\n                 * @return {?}\n                 */\n                slickItem => {\n                    /** @type {?} */\n                    const idx = this.slides.indexOf(slickItem);\n                    this.slides = this.slides.filter((/**\n                     * @param {?} s\n                     * @return {?}\n                     */\n                    s => s !== slickItem));\n                    this.zone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        this.$instance.slick('slickRemove', idx);\n                    }));\n                }));\n                this._removedSlides = [];\n            }\n        }\n    }\n    /**\n     * init slick\n     * @return {?}\n     */\n    initSlick() {\n        this.slides = this._addedSlides;\n        this._addedSlides = [];\n        this._removedSlides = [];\n        this.zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this.$instance = jQuery(this.el.nativeElement);\n            this.$instance.on('init', (/**\n             * @param {?} event\n             * @param {?} slick\n             * @return {?}\n             */\n            (event, slick) => {\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.init.emit({ event, slick });\n                }));\n            }));\n            this.$instance.slick(this.config);\n            this.zone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.initialized = true;\n                this.currentIndex = (this.config && this.config.initialSlide) ? this.config.initialSlide : 0;\n            }));\n            this.$instance.on('afterChange', (/**\n             * @param {?} event\n             * @param {?} slick\n             * @param {?} currentSlide\n             * @return {?}\n             */\n            (event, slick, currentSlide) => {\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.afterChange.emit({ event, slick, currentSlide });\n                    this.currentIndex = currentSlide;\n                }));\n            }));\n            this.$instance.on('beforeChange', (/**\n             * @param {?} event\n             * @param {?} slick\n             * @param {?} currentSlide\n             * @param {?} nextSlide\n             * @return {?}\n             */\n            (event, slick, currentSlide, nextSlide) => {\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.beforeChange.emit({ event, slick, currentSlide, nextSlide });\n                    this.currentIndex = nextSlide;\n                }));\n            }));\n            this.$instance.on('breakpoint', (/**\n             * @param {?} event\n             * @param {?} slick\n             * @param {?} breakpoint\n             * @return {?}\n             */\n            (event, slick, breakpoint) => {\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.breakpoint.emit({ event, slick, breakpoint });\n                }));\n            }));\n            this.$instance.on('destroy', (/**\n             * @param {?} event\n             * @param {?} slick\n             * @return {?}\n             */\n            (event, slick) => {\n                this.zone.run((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.destroy.emit({ event, slick });\n                    this.initialized = false;\n                }));\n            }));\n        }));\n    }\n    /**\n     * @param {?} slickItem\n     * @return {?}\n     */\n    addSlide(slickItem) {\n        this._addedSlides.push(slickItem);\n    }\n    /**\n     * @param {?} slickItem\n     * @return {?}\n     */\n    removeSlide(slickItem) {\n        this._removedSlides.push(slickItem);\n    }\n    /**\n     * Slick Method\n     * @param {?} index\n     * @return {?}\n     */\n    slickGoTo(index) {\n        this.zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this.$instance.slick('slickGoTo', index);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    slickNext() {\n        this.zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this.$instance.slick('slickNext');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    slickPrev() {\n        this.zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this.$instance.slick('slickPrev');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    slickPause() {\n        this.zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this.$instance.slick('slickPause');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    slickPlay() {\n        this.zone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this.$instance.slick('slickPlay');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    unslick() {\n        if (this.$instance) {\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                this.$instance.slick('unslick');\n            }));\n            this.$instance = undefined;\n        }\n        this.initialized = false;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this.initialized) {\n            /** @type {?} */\n            const config = changes['config'];\n            if (config.previousValue !== config.currentValue && config.currentValue !== undefined) {\n                /** @type {?} */\n                const refresh = config.currentValue['refresh'];\n                /** @type {?} */\n                const newOptions = Object.assign({}, config.currentValue);\n                delete newOptions['refresh'];\n                this.zone.runOutsideAngular((/**\n                 * @return {?}\n                 */\n                () => {\n                    this.$instance.slick('slickSetOption', newOptions, refresh);\n                }));\n            }\n        }\n    }\n}\nSlickCarouselComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'ngx-slick-carousel',\n                exportAs: 'slick-carousel',\n                providers: [{\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef((/**\n                         * @return {?}\n                         */\n                        () => SlickCarouselComponent)),\n                        multi: true\n                    }],\n                template: '<ng-content></ng-content>'\n            }] }\n];\n/** @nocollapse */\nSlickCarouselComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone }\n];\nSlickCarouselComponent.propDecorators = {\n    config: [{ type: Input }],\n    afterChange: [{ type: Output }],\n    beforeChange: [{ type: Output }],\n    breakpoint: [{ type: Output }],\n    destroy: [{ type: Output }],\n    init: [{ type: Output }]\n};\nif (false) {\n    /** @type {?} */\n    SlickCarouselComponent.prototype.config;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.afterChange;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.beforeChange;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.breakpoint;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.destroy;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.init;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.$instance;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.currentIndex;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.slides;\n    /** @type {?} */\n    SlickCarouselComponent.prototype.initialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    SlickCarouselComponent.prototype._removedSlides;\n    /**\n     * @type {?}\n     * @private\n     */\n    SlickCarouselComponent.prototype._addedSlides;\n    /**\n     * @type {?}\n     * @private\n     */\n    SlickCarouselComponent.prototype.el;\n    /**\n     * @type {?}\n     * @private\n     */\n    SlickCarouselComponent.prototype.zone;\n}\nclass SlickItemDirective {\n    /**\n     * @param {?} el\n     * @param {?} platformId\n     * @param {?} carousel\n     */\n    constructor(el, platformId, carousel) {\n        this.el = el;\n        this.platformId = platformId;\n        this.carousel = carousel;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.carousel.addSlide(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (isPlatformBrowser(this.platformId)) {\n            this.carousel.removeSlide(this);\n        }\n    }\n}\nSlickItemDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngxSlickItem]',\n            },] }\n];\n/** @nocollapse */\nSlickItemDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: SlickCarouselComponent, decorators: [{ type: Host }] }\n];\nif (false) {\n    /** @type {?} */\n    SlickItemDirective.prototype.el;\n    /**\n     * @type {?}\n     * @private\n     */\n    SlickItemDirective.prototype.platformId;\n    /**\n     * @type {?}\n     * @private\n     */\n    SlickItemDirective.prototype.carousel;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass SlickCarouselModule {\n}\nSlickCarouselModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    CommonModule\n                ],\n                declarations: [\n                    SlickCarouselComponent,\n                    SlickItemDirective,\n                ],\n                exports: [\n                    SlickCarouselComponent,\n                    SlickItemDirective,\n                ]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { SlickCarouselComponent, SlickCarouselModule, SlickItemDirective };\n//# sourceMappingURL=ngx-slick-carousel.js.map\n"],"sourceRoot":"webpack:///"}